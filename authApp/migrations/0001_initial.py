# Generated by Django 4.0.6 on 2022-07-27 16:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('Documento', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('Nombre', models.CharField(max_length=50)),
                ('NickName', models.CharField(max_length=20)),
                ('FechaRegistro', models.DateField()),
                ('FechaNacimiento', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('idEstado', models.AutoField(primary_key=True, serialize=False)),
                ('Estado', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Mesa',
            fields=[
                ('idMesa', models.AutoField(primary_key=True, serialize=False)),
                ('Observaciones', models.CharField(max_length=250)),
                ('idEstado', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FKidEstado', to='authApp.estado')),
            ],
        ),
        migrations.CreateModel(
            name='Tarifa',
            fields=[
                ('idTarifa', models.AutoField(primary_key=True, serialize=False)),
                ('Tarifa', models.CharField(max_length=50)),
                ('ValorMinuto', models.IntegerField()),
                ('Estado', models.BooleanField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='TipoMesa',
            fields=[
                ('idTipo', models.AutoField(primary_key=True, serialize=False)),
                ('TipoMesa', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Tiempo',
            fields=[
                ('idTiempo', models.AutoField(primary_key=True, serialize=False)),
                ('Ingreso', models.DateTimeField()),
                ('egreso', models.DateTimeField()),
                ('Observaciones', models.CharField(max_length=250)),
                ('idCliente', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FKDocumento', to='authApp.cliente')),
                ('idMesa', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FKidMesa', to='authApp.mesa')),
                ('idTarifa', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FKidTarifa', to='authApp.tarifa')),
            ],
        ),
        migrations.AddField(
            model_name='mesa',
            name='idTipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FKidTipo', to='authApp.tipomesa'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=15, unique=True, verbose_name='Username')),
                ('password', models.CharField(max_length=256, verbose_name='Password')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
